name: Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.21, 1.22, 1.23, 1.24]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: true

      - name: Verify Go installation
        run: |
          go version
          go env GOROOT
          go env GOPATH
          go env GO111MODULE

      - name: Cache Go modules
        uses: actions/cache@v4.2.3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.mod') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-
            ${{ runner.os }}-go-

      - name: Initialize Go module
        run: |
          echo "Checking module status..."
          echo "Go version: $(go version)"
          echo "Current directory: $(pwd)"
          echo "Contents of go.mod:"
          cat go.mod
          echo "Running go mod tidy..."
          go mod tidy -v
          echo "Module initialization complete"
        env:
          GO111MODULE: on

      - name: Download dependencies
        run: go mod download
        env:
          GO111MODULE: on

      - name: Verify dependencies
        run: go mod verify
        env:
          GO111MODULE: on

      - name: Run go vet
        run: go vet ./...

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Run staticcheck
        run: staticcheck ./...

      - name: Run tests
        run: go test -race -coverprofile=coverage.out -covermode=atomic ./...
        env:
          CGO_ENABLED: 1
          GO111MODULE: on

      - name: Run benchmarks
        run: go test -bench=. -benchmem ./...
        env:
          GO111MODULE: on

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.4.3
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24
          check-latest: true

      - name: Build
        run: go build -v ./...

      - name: Verify package
        run: |
          echo "âœ… Package builds successfully"
          echo "ðŸ“¦ Ready for import: github.com/FrostBreker/yfinance-api"
          echo "ðŸš€ All build checks passed!"

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24
          check-latest: true

      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: "./..."

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24
          check-latest: true

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          args: --timeout=5m
